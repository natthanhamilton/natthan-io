{"version":3,"file":"js/12.da5ae2.chunk.js","sources":["webpack:///./src/app/views/partials/Portfolio.jsx"],"sourcesContent":["import React, {\n  Component\n} from 'react'\nimport {\n  Link\n} from 'react-router-dom'\nimport cloudinary from 'cloudinary'\nimport PropTypes from 'prop-types';\nimport LazyLoad from 'react-lazy-load';\nimport Img from 'react-image-smooth-loading'\n\nimport {\n  withStyles\n} from 'material-ui/styles';\nimport Grid from 'material-ui/Grid';\nimport Dialog, {\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from 'material-ui/Dialog';\nimport Card, {\n  CardActions,\n  CardContent,\n  CardMedia,\n} from 'material-ui/Card';\nimport Button from 'material-ui/Button';\nimport Paper from 'material-ui/Paper';\nimport Typography from 'material-ui/Typography'\nimport GroupWork from 'material-ui-icons/GroupWork';\n\nimport locale from '../../../assets/locale/en_us';\nimport {\n  closePortfolio\n} from '../../redux/actions'\n\nconst styles = {\n  dialog: {\n    zIndex: 11111111\n  },\n  paper: {\n    margin: '0 0 20 0',\n    padding: 0,\n  },\n  image: {\n    maxWidth: '100%'\n  },\n  title: {\n    paddingBottom: 10\n  },\n};\n\n\nclass Portfolio extends Component {\n  constructor( props ) {\n    super( props );\n    this.state = {\n      index: null\n    };\n  }\n\n  render() {\n    const c = { ...this.props.c,\n      ...this.props.classes\n    };\n    const s = this.state\n\n    const list = () => {\n      const res = locale.portfolio.map( ( d, i ) => ( <Grid key={i} item xs={12} sm={6}>\n        <Card>\n          <LazyLoad className={c.lazyLoad} height={200}>\n            <img className={c.imgPlaceholder} src={cloudinary.url(`portfolio/${d.image}.jpg`, {height: 200, quality: \"auto:good\", crop: \"scale\"})} title={d.name} alt={d.name} />\n          </LazyLoad>\n          <CardContent>\n            <Typography variant=\"title\">{d.name}</Typography>\n            <Typography variant=\"body1\" noWrap>{d.summary}</Typography>\n          </CardContent>\n          <CardActions>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.setState({index: i})}\n            >\n                Learn More\n            </Button>\n            {d.website != null && (\n              <Button target=\"_new\" href={d.website} color=\"primary\">\n                Website\n              </Button>\n              )}\n          </CardActions>\n        </Card>\n                                                      </Grid> ) )\n      return res\n    }\n    const dialog = () => {\n      let l = locale.portfolio[ s.index ];\n\n      return ( <Dialog\n        className={c.dialog}\n        open={s.index != null ? true : false}\n        onClose={() => this.setState({index: null})}\n        aria-labelledby={l.name}\n        aria-describedby={l.summary}\n      >\n        <DialogContent>\n          <DialogContentText id={l.summary}>\n            <Paper className={c.paper} elevation={4}>\n              <img className={c.image} src={cloudinary.url(`portfolio/${l.image}.jpg`)} alt={l.name} />\n            </Paper>\n            <Typography className={c.title} variant=\"title\">{l.name}</Typography>\n            <Typography variant=\"body1\">{l.content}</Typography>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => this.setState({index: null})} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog> )\n    }\n\n    return ( <div>\n      <Grid container className={c.container} spacing={0}>\n        <Grid item xs={12}>\n          <Typography variant=\"title\"><GroupWork className={c.iconLarge} />\n                    &nbsp;Portfolio\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container spacing={24}>\n            {list()}\n          </Grid>\n        </Grid>\n      </Grid>\n      {s.index != null && dialog()}\n    </div> )\n  }\n}\n\nPortfolio.propTypes = {\n  classes: PropTypes.object,\n  c: PropTypes.object\n}\nPortfolio.defaultProps = {\n  classes: {},\n  c: {}\n};\n\nexport default withStyles( styles )( Portfolio )"],"mappings":"AAoCA","sourceRoot":""}